#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MISPortal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MISPortal")]
	public partial class MISPortal_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthorisedRepresentativeDetail(AuthorisedRepresentativeDetail instance);
    partial void UpdateAuthorisedRepresentativeDetail(AuthorisedRepresentativeDetail instance);
    partial void DeleteAuthorisedRepresentativeDetail(AuthorisedRepresentativeDetail instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertFinancialAdviserAddress(FinancialAdviserAddress instance);
    partial void UpdateFinancialAdviserAddress(FinancialAdviserAddress instance);
    partial void DeleteFinancialAdviserAddress(FinancialAdviserAddress instance);
    partial void InsertFinancialAdviserDetail(FinancialAdviserDetail instance);
    partial void UpdateFinancialAdviserDetail(FinancialAdviserDetail instance);
    partial void DeleteFinancialAdviserDetail(FinancialAdviserDetail instance);
    partial void InsertPaymentMethod(PaymentMethod instance);
    partial void UpdatePaymentMethod(PaymentMethod instance);
    partial void DeletePaymentMethod(PaymentMethod instance);
    partial void InsertShareholder(Shareholder instance);
    partial void UpdateShareholder(Shareholder instance);
    partial void DeleteShareholder(Shareholder instance);
    partial void InsertTrustCompanyAddress(TrustCompanyAddress instance);
    partial void UpdateTrustCompanyAddress(TrustCompanyAddress instance);
    partial void DeleteTrustCompanyAddress(TrustCompanyAddress instance);
    partial void InsertUploadDocument(UploadDocument instance);
    partial void UpdateUploadDocument(UploadDocument instance);
    partial void DeleteUploadDocument(UploadDocument instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertGreenidVerification(GreenidVerification instance);
    partial void UpdateGreenidVerification(GreenidVerification instance);
    partial void DeleteGreenidVerification(GreenidVerification instance);
    partial void InsertApplicant(Applicant instance);
    partial void UpdateApplicant(Applicant instance);
    partial void DeleteApplicant(Applicant instance);
    partial void InsertApplicantNoVerificationId(ApplicantNoVerificationId instance);
    partial void UpdateApplicantNoVerificationId(ApplicantNoVerificationId instance);
    partial void DeleteApplicantNoVerificationId(ApplicantNoVerificationId instance);
    partial void InsertInvestmentDetail(InvestmentDetail instance);
    partial void UpdateInvestmentDetail(InvestmentDetail instance);
    partial void DeleteInvestmentDetail(InvestmentDetail instance);
    partial void InsertVisitLead(VisitLead instance);
    partial void UpdateVisitLead(VisitLead instance);
    partial void DeleteVisitLead(VisitLead instance);
    partial void InsertTrustCompany(TrustCompany instance);
    partial void UpdateTrustCompany(TrustCompany instance);
    partial void DeleteTrustCompany(TrustCompany instance);
    partial void InsertPersonalDetail(PersonalDetail instance);
    partial void UpdatePersonalDetail(PersonalDetail instance);
    partial void DeletePersonalDetail(PersonalDetail instance);
    #endregion
		
		public MISPortal_DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MISPortalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MISPortal_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MISPortal_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MISPortal_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MISPortal_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AuthorisedRepresentativeDetail> AuthorisedRepresentativeDetails
		{
			get
			{
				return this.GetTable<AuthorisedRepresentativeDetail>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<FinancialAdviserAddress> FinancialAdviserAddresses
		{
			get
			{
				return this.GetTable<FinancialAdviserAddress>();
			}
		}
		
		public System.Data.Linq.Table<FinancialAdviserDetail> FinancialAdviserDetails
		{
			get
			{
				return this.GetTable<FinancialAdviserDetail>();
			}
		}
		
		public System.Data.Linq.Table<PaymentMethod> PaymentMethods
		{
			get
			{
				return this.GetTable<PaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<Shareholder> Shareholders
		{
			get
			{
				return this.GetTable<Shareholder>();
			}
		}
		
		public System.Data.Linq.Table<TrustCompanyAddress> TrustCompanyAddresses
		{
			get
			{
				return this.GetTable<TrustCompanyAddress>();
			}
		}
		
		public System.Data.Linq.Table<UploadDocument> UploadDocuments
		{
			get
			{
				return this.GetTable<UploadDocument>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<GreenidVerification> GreenidVerifications
		{
			get
			{
				return this.GetTable<GreenidVerification>();
			}
		}
		
		public System.Data.Linq.Table<Applicant> Applicants
		{
			get
			{
				return this.GetTable<Applicant>();
			}
		}
		
		public System.Data.Linq.Table<ApplicantNoVerificationId> ApplicantNoVerificationIds
		{
			get
			{
				return this.GetTable<ApplicantNoVerificationId>();
			}
		}
		
		public System.Data.Linq.Table<InvestmentDetail> InvestmentDetails
		{
			get
			{
				return this.GetTable<InvestmentDetail>();
			}
		}
		
		public System.Data.Linq.Table<VisitLead> VisitLeads
		{
			get
			{
				return this.GetTable<VisitLead>();
			}
		}
		
		public System.Data.Linq.Table<TrustCompany> TrustCompanies
		{
			get
			{
				return this.GetTable<TrustCompany>();
			}
		}
		
		public System.Data.Linq.Table<PersonalDetail> PersonalDetails
		{
			get
			{
				return this.GetTable<PersonalDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorisedRepresentativeDetails")]
	public partial class AuthorisedRepresentativeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _AuthRepDetailID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _Title;
		
		private string _FullName;
		
		private string _Surname;
		
		private string _TelephoneNo;
		
		private string _MobileNo;
		
		private string _EmailAddress;
		
		private string _AFSL_LicenceNo;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthRepDetailIDChanging(decimal value);
    partial void OnAuthRepDetailIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnAFSL_LicenceNoChanging(string value);
    partial void OnAFSL_LicenceNoChanged();
    #endregion
		
		public AuthorisedRepresentativeDetail()
		{
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthRepDetailID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal AuthRepDetailID
		{
			get
			{
				return this._AuthRepDetailID;
			}
			set
			{
				if ((this._AuthRepDetailID != value))
				{
					this.OnAuthRepDetailIDChanging(value);
					this.SendPropertyChanging();
					this._AuthRepDetailID = value;
					this.SendPropertyChanged("AuthRepDetailID");
					this.OnAuthRepDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(MAX)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AFSL_LicenceNo", DbType="NVarChar(MAX)")]
		public string AFSL_LicenceNo
		{
			get
			{
				return this._AFSL_LicenceNo;
			}
			set
			{
				if ((this._AFSL_LicenceNo != value))
				{
					this.OnAFSL_LicenceNoChanging(value);
					this.SendPropertyChanging();
					this._AFSL_LicenceNo = value;
					this.SendPropertyChanged("AFSL_LicenceNo");
					this.OnAFSL_LicenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_AuthorisedRepresentativeDetail", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.AuthorisedRepresentativeDetails.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.AuthorisedRepresentativeDetails.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CountryCode;
		
		private string _Description;
		
		private string _Prefix;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCodeChanging(decimal value);
    partial void OnCountryCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(50)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialAdviserAddress")]
	public partial class FinancialAdviserAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _FinancialAdviserAddressID;
		
		private System.Nullable<decimal> _FinancialAdviserDetailID;
		
		private string _AddressType;
		
		private string _Address;
		
		private string _POBox;
		
		private string _Suburb;
		
		private string _State;
		
		private string _Postcode;
		
		private string _Country;
		
		private System.Nullable<bool> _IsSame;
		
		private EntityRef<FinancialAdviserDetail> _FinancialAdviserDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFinancialAdviserAddressIDChanging(decimal value);
    partial void OnFinancialAdviserAddressIDChanged();
    partial void OnFinancialAdviserDetailIDChanging(System.Nullable<decimal> value);
    partial void OnFinancialAdviserDetailIDChanged();
    partial void OnAddressTypeChanging(string value);
    partial void OnAddressTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPOBoxChanging(string value);
    partial void OnPOBoxChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnIsSameChanging(System.Nullable<bool> value);
    partial void OnIsSameChanged();
    #endregion
		
		public FinancialAdviserAddress()
		{
			this._FinancialAdviserDetail = default(EntityRef<FinancialAdviserDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialAdviserAddressID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal FinancialAdviserAddressID
		{
			get
			{
				return this._FinancialAdviserAddressID;
			}
			set
			{
				if ((this._FinancialAdviserAddressID != value))
				{
					this.OnFinancialAdviserAddressIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialAdviserAddressID = value;
					this.SendPropertyChanged("FinancialAdviserAddressID");
					this.OnFinancialAdviserAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialAdviserDetailID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FinancialAdviserDetailID
		{
			get
			{
				return this._FinancialAdviserDetailID;
			}
			set
			{
				if ((this._FinancialAdviserDetailID != value))
				{
					if (this._FinancialAdviserDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialAdviserDetailIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialAdviserDetailID = value;
					this.SendPropertyChanged("FinancialAdviserDetailID");
					this.OnFinancialAdviserDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressType", DbType="NVarChar(50)")]
		public string AddressType
		{
			get
			{
				return this._AddressType;
			}
			set
			{
				if ((this._AddressType != value))
				{
					this.OnAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._AddressType = value;
					this.SendPropertyChanged("AddressType");
					this.OnAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POBox", DbType="NVarChar(MAX)")]
		public string POBox
		{
			get
			{
				return this._POBox;
			}
			set
			{
				if ((this._POBox != value))
				{
					this.OnPOBoxChanging(value);
					this.SendPropertyChanging();
					this._POBox = value;
					this.SendPropertyChanged("POBox");
					this.OnPOBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(50)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSame", DbType="Bit")]
		public System.Nullable<bool> IsSame
		{
			get
			{
				return this._IsSame;
			}
			set
			{
				if ((this._IsSame != value))
				{
					this.OnIsSameChanging(value);
					this.SendPropertyChanging();
					this._IsSame = value;
					this.SendPropertyChanged("IsSame");
					this.OnIsSameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialAdviserDetail_FinancialAdviserAddress", Storage="_FinancialAdviserDetail", ThisKey="FinancialAdviserDetailID", OtherKey="FinancialAdviserDetailID", IsForeignKey=true)]
		public FinancialAdviserDetail FinancialAdviserDetail
		{
			get
			{
				return this._FinancialAdviserDetail.Entity;
			}
			set
			{
				FinancialAdviserDetail previousValue = this._FinancialAdviserDetail.Entity;
				if (((previousValue != value) 
							|| (this._FinancialAdviserDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialAdviserDetail.Entity = null;
						previousValue.FinancialAdviserAddresses.Remove(this);
					}
					this._FinancialAdviserDetail.Entity = value;
					if ((value != null))
					{
						value.FinancialAdviserAddresses.Add(this);
						this._FinancialAdviserDetailID = value.FinancialAdviserDetailID;
					}
					else
					{
						this._FinancialAdviserDetailID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("FinancialAdviserDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialAdviserDetails")]
	public partial class FinancialAdviserDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _FinancialAdviserDetailID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _DealerGroupName;
		
		private string _AdviserName;
		
		private string _AFSL_Number;
		
		private string _ContactNo;
		
		private string _EmailAddress;
		
		private string _BusinessNo;
		
		private string _MobileNo;
		
		private EntitySet<FinancialAdviserAddress> _FinancialAdviserAddresses;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFinancialAdviserDetailIDChanging(decimal value);
    partial void OnFinancialAdviserDetailIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnDealerGroupNameChanging(string value);
    partial void OnDealerGroupNameChanged();
    partial void OnAdviserNameChanging(string value);
    partial void OnAdviserNameChanged();
    partial void OnAFSL_NumberChanging(string value);
    partial void OnAFSL_NumberChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnBusinessNoChanging(string value);
    partial void OnBusinessNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    #endregion
		
		public FinancialAdviserDetail()
		{
			this._FinancialAdviserAddresses = new EntitySet<FinancialAdviserAddress>(new Action<FinancialAdviserAddress>(this.attach_FinancialAdviserAddresses), new Action<FinancialAdviserAddress>(this.detach_FinancialAdviserAddresses));
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialAdviserDetailID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal FinancialAdviserDetailID
		{
			get
			{
				return this._FinancialAdviserDetailID;
			}
			set
			{
				if ((this._FinancialAdviserDetailID != value))
				{
					this.OnFinancialAdviserDetailIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialAdviserDetailID = value;
					this.SendPropertyChanged("FinancialAdviserDetailID");
					this.OnFinancialAdviserDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerGroupName", DbType="NVarChar(MAX)")]
		public string DealerGroupName
		{
			get
			{
				return this._DealerGroupName;
			}
			set
			{
				if ((this._DealerGroupName != value))
				{
					this.OnDealerGroupNameChanging(value);
					this.SendPropertyChanging();
					this._DealerGroupName = value;
					this.SendPropertyChanged("DealerGroupName");
					this.OnDealerGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviserName", DbType="NVarChar(MAX)")]
		public string AdviserName
		{
			get
			{
				return this._AdviserName;
			}
			set
			{
				if ((this._AdviserName != value))
				{
					this.OnAdviserNameChanging(value);
					this.SendPropertyChanging();
					this._AdviserName = value;
					this.SendPropertyChanged("AdviserName");
					this.OnAdviserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AFSL_Number", DbType="NVarChar(MAX)")]
		public string AFSL_Number
		{
			get
			{
				return this._AFSL_Number;
			}
			set
			{
				if ((this._AFSL_Number != value))
				{
					this.OnAFSL_NumberChanging(value);
					this.SendPropertyChanging();
					this._AFSL_Number = value;
					this.SendPropertyChanged("AFSL_Number");
					this.OnAFSL_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="NVarChar(50)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessNo", DbType="NVarChar(50)")]
		public string BusinessNo
		{
			get
			{
				return this._BusinessNo;
			}
			set
			{
				if ((this._BusinessNo != value))
				{
					this.OnBusinessNoChanging(value);
					this.SendPropertyChanging();
					this._BusinessNo = value;
					this.SendPropertyChanged("BusinessNo");
					this.OnBusinessNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialAdviserDetail_FinancialAdviserAddress", Storage="_FinancialAdviserAddresses", ThisKey="FinancialAdviserDetailID", OtherKey="FinancialAdviserDetailID")]
		public EntitySet<FinancialAdviserAddress> FinancialAdviserAddresses
		{
			get
			{
				return this._FinancialAdviserAddresses;
			}
			set
			{
				this._FinancialAdviserAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_FinancialAdviserDetail", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.FinancialAdviserDetails.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.FinancialAdviserDetails.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FinancialAdviserAddresses(FinancialAdviserAddress entity)
		{
			this.SendPropertyChanging();
			entity.FinancialAdviserDetail = this;
		}
		
		private void detach_FinancialAdviserAddresses(FinancialAdviserAddress entity)
		{
			this.SendPropertyChanging();
			entity.FinancialAdviserDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentMethod")]
	public partial class PaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PaymentMethodID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _PaymentType;
		
		private string _FinancialInstituteName;
		
		private string _BranchName;
		
		private string _BSBNumber;
		
		private string _AccountNumber;
		
		private string _AccountName;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentMethodIDChanging(decimal value);
    partial void OnPaymentMethodIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnFinancialInstituteNameChanging(string value);
    partial void OnFinancialInstituteNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBSBNumberChanging(string value);
    partial void OnBSBNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    #endregion
		
		public PaymentMethod()
		{
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(50)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialInstituteName", DbType="NVarChar(MAX)")]
		public string FinancialInstituteName
		{
			get
			{
				return this._FinancialInstituteName;
			}
			set
			{
				if ((this._FinancialInstituteName != value))
				{
					this.OnFinancialInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._FinancialInstituteName = value;
					this.SendPropertyChanged("FinancialInstituteName");
					this.OnFinancialInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(MAX)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSBNumber", DbType="NVarChar(MAX)")]
		public string BSBNumber
		{
			get
			{
				return this._BSBNumber;
			}
			set
			{
				if ((this._BSBNumber != value))
				{
					this.OnBSBNumberChanging(value);
					this.SendPropertyChanging();
					this._BSBNumber = value;
					this.SendPropertyChanged("BSBNumber");
					this.OnBSBNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(MAX)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(MAX)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_PaymentMethod", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.PaymentMethods.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.PaymentMethods.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shareholders")]
	public partial class Shareholder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ShareholderID;
		
		private System.Nullable<decimal> _TrustCompanyID;
		
		private string _Title;
		
		private string _FullName;
		
		private string _Surname;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _State;
		
		private string _Postcode;
		
		private string _Country;
		
		private EntityRef<TrustCompany> _TrustCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShareholderIDChanging(decimal value);
    partial void OnShareholderIDChanged();
    partial void OnTrustCompanyIDChanging(System.Nullable<decimal> value);
    partial void OnTrustCompanyIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Shareholder()
		{
			this._TrustCompany = default(EntityRef<TrustCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareholderID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ShareholderID
		{
			get
			{
				return this._ShareholderID;
			}
			set
			{
				if ((this._ShareholderID != value))
				{
					this.OnShareholderIDChanging(value);
					this.SendPropertyChanging();
					this._ShareholderID = value;
					this.SendPropertyChanged("ShareholderID");
					this.OnShareholderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustCompanyID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TrustCompanyID
		{
			get
			{
				return this._TrustCompanyID;
			}
			set
			{
				if ((this._TrustCompanyID != value))
				{
					if (this._TrustCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._TrustCompanyID = value;
					this.SendPropertyChanged("TrustCompanyID");
					this.OnTrustCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(MAX)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(50)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustCompany_Shareholder", Storage="_TrustCompany", ThisKey="TrustCompanyID", OtherKey="TrustCompanyID", IsForeignKey=true)]
		public TrustCompany TrustCompany
		{
			get
			{
				return this._TrustCompany.Entity;
			}
			set
			{
				TrustCompany previousValue = this._TrustCompany.Entity;
				if (((previousValue != value) 
							|| (this._TrustCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustCompany.Entity = null;
						previousValue.Shareholders.Remove(this);
					}
					this._TrustCompany.Entity = value;
					if ((value != null))
					{
						value.Shareholders.Add(this);
						this._TrustCompanyID = value.TrustCompanyID;
					}
					else
					{
						this._TrustCompanyID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("TrustCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustCompanyAddress")]
	public partial class TrustCompanyAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _TrustCompanyAddressID;
		
		private System.Nullable<decimal> _TrustCompanyID;
		
		private string _AddressType;
		
		private string _Address;
		
		private string _PPOBox;
		
		private string _Suburb;
		
		private string _State;
		
		private string _Postcode;
		
		private string _Country;
		
		private System.Nullable<bool> _IsSame;
		
		private EntityRef<TrustCompany> _TrustCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustCompanyAddressIDChanging(decimal value);
    partial void OnTrustCompanyAddressIDChanged();
    partial void OnTrustCompanyIDChanging(System.Nullable<decimal> value);
    partial void OnTrustCompanyIDChanged();
    partial void OnAddressTypeChanging(string value);
    partial void OnAddressTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPPOBoxChanging(string value);
    partial void OnPPOBoxChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnIsSameChanging(System.Nullable<bool> value);
    partial void OnIsSameChanged();
    #endregion
		
		public TrustCompanyAddress()
		{
			this._TrustCompany = default(EntityRef<TrustCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustCompanyAddressID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal TrustCompanyAddressID
		{
			get
			{
				return this._TrustCompanyAddressID;
			}
			set
			{
				if ((this._TrustCompanyAddressID != value))
				{
					this.OnTrustCompanyAddressIDChanging(value);
					this.SendPropertyChanging();
					this._TrustCompanyAddressID = value;
					this.SendPropertyChanged("TrustCompanyAddressID");
					this.OnTrustCompanyAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustCompanyID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TrustCompanyID
		{
			get
			{
				return this._TrustCompanyID;
			}
			set
			{
				if ((this._TrustCompanyID != value))
				{
					if (this._TrustCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._TrustCompanyID = value;
					this.SendPropertyChanged("TrustCompanyID");
					this.OnTrustCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressType", DbType="NVarChar(50)")]
		public string AddressType
		{
			get
			{
				return this._AddressType;
			}
			set
			{
				if ((this._AddressType != value))
				{
					this.OnAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._AddressType = value;
					this.SendPropertyChanged("AddressType");
					this.OnAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPOBox", DbType="NVarChar(MAX)")]
		public string PPOBox
		{
			get
			{
				return this._PPOBox;
			}
			set
			{
				if ((this._PPOBox != value))
				{
					this.OnPPOBoxChanging(value);
					this.SendPropertyChanging();
					this._PPOBox = value;
					this.SendPropertyChanged("PPOBox");
					this.OnPPOBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(50)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSame", DbType="Bit")]
		public System.Nullable<bool> IsSame
		{
			get
			{
				return this._IsSame;
			}
			set
			{
				if ((this._IsSame != value))
				{
					this.OnIsSameChanging(value);
					this.SendPropertyChanging();
					this._IsSame = value;
					this.SendPropertyChanged("IsSame");
					this.OnIsSameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustCompany_TrustCompanyAddress", Storage="_TrustCompany", ThisKey="TrustCompanyID", OtherKey="TrustCompanyID", IsForeignKey=true)]
		public TrustCompany TrustCompany
		{
			get
			{
				return this._TrustCompany.Entity;
			}
			set
			{
				TrustCompany previousValue = this._TrustCompany.Entity;
				if (((previousValue != value) 
							|| (this._TrustCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustCompany.Entity = null;
						previousValue.TrustCompanyAddresses.Remove(this);
					}
					this._TrustCompany.Entity = value;
					if ((value != null))
					{
						value.TrustCompanyAddresses.Add(this);
						this._TrustCompanyID = value.TrustCompanyID;
					}
					else
					{
						this._TrustCompanyID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("TrustCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UploadDocuments")]
	public partial class UploadDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _UploadDocumentID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _FileName;
		
		private string _Path;
		
		private System.Nullable<System.DateTime> _CreationDateTime;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadDocumentIDChanging(decimal value);
    partial void OnUploadDocumentIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnCreationDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateTimeChanged();
    #endregion
		
		public UploadDocument()
		{
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDocumentID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal UploadDocumentID
		{
			get
			{
				return this._UploadDocumentID;
			}
			set
			{
				if ((this._UploadDocumentID != value))
				{
					this.OnUploadDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._UploadDocumentID = value;
					this.SendPropertyChanged("UploadDocumentID");
					this.OnUploadDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(MAX)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_UploadDocument", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.UploadDocuments.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.UploadDocuments.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _UserID;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _Username;
		
		private string _Password;
		
		private string _EmailAddress;
		
		private System.Nullable<System.DateTime> _CreationDateTime;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Applicant> _Applicants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(decimal value);
    partial void OnUserIDChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnCreationDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateTimeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public User()
		{
			this._Applicants = new EntitySet<Applicant>(new Action<Applicant>(this.attach_Applicants), new Action<Applicant>(this.detach_Applicants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName", DbType="NVarChar(MAX)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName", DbType="NVarChar(MAX)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Applicant", Storage="_Applicants", ThisKey="UserID", OtherKey="AdviserID")]
		public EntitySet<Applicant> Applicants
		{
			get
			{
				return this._Applicants;
			}
			set
			{
				this._Applicants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applicants(Applicant entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Applicants(Applicant entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _AddressID;
		
		private System.Nullable<decimal> _PersonalDetailID;
		
		private string _AddressType;
		
		private string _Address1;
		
		private string _Suburb;
		
		private string _State;
		
		private string _Postcode;
		
		private string _Country;
		
		private System.Nullable<bool> _IsSame;
		
		private System.Nullable<decimal> _Unit;
		
		private System.Nullable<decimal> _StreetNo;
		
		private string _StreetName;
		
		private string _StreetType;
		
		private EntityRef<PersonalDetail> _PersonalDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(decimal value);
    partial void OnAddressIDChanged();
    partial void OnPersonalDetailIDChanging(System.Nullable<decimal> value);
    partial void OnPersonalDetailIDChanged();
    partial void OnAddressTypeChanging(string value);
    partial void OnAddressTypeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnIsSameChanging(System.Nullable<bool> value);
    partial void OnIsSameChanged();
    partial void OnUnitChanging(System.Nullable<decimal> value);
    partial void OnUnitChanged();
    partial void OnStreetNoChanging(System.Nullable<decimal> value);
    partial void OnStreetNoChanged();
    partial void OnStreetNameChanging(string value);
    partial void OnStreetNameChanged();
    partial void OnStreetTypeChanging(string value);
    partial void OnStreetTypeChanged();
    #endregion
		
		public Address()
		{
			this._PersonalDetail = default(EntityRef<PersonalDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDetailID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PersonalDetailID
		{
			get
			{
				return this._PersonalDetailID;
			}
			set
			{
				if ((this._PersonalDetailID != value))
				{
					if (this._PersonalDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonalDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PersonalDetailID = value;
					this.SendPropertyChanged("PersonalDetailID");
					this.OnPersonalDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressType", DbType="NVarChar(50)")]
		public string AddressType
		{
			get
			{
				return this._AddressType;
			}
			set
			{
				if ((this._AddressType != value))
				{
					this.OnAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._AddressType = value;
					this.SendPropertyChanged("AddressType");
					this.OnAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Address", Storage="_Address1", DbType="NVarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(50)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSame", DbType="Bit")]
		public System.Nullable<bool> IsSame
		{
			get
			{
				return this._IsSame;
			}
			set
			{
				if ((this._IsSame != value))
				{
					this.OnIsSameChanging(value);
					this.SendPropertyChanging();
					this._IsSame = value;
					this.SendPropertyChanged("IsSame");
					this.OnIsSameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNo", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StreetNo
		{
			get
			{
				return this._StreetNo;
			}
			set
			{
				if ((this._StreetNo != value))
				{
					this.OnStreetNoChanging(value);
					this.SendPropertyChanging();
					this._StreetNo = value;
					this.SendPropertyChanged("StreetNo");
					this.OnStreetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetName", DbType="NVarChar(MAX)")]
		public string StreetName
		{
			get
			{
				return this._StreetName;
			}
			set
			{
				if ((this._StreetName != value))
				{
					this.OnStreetNameChanging(value);
					this.SendPropertyChanging();
					this._StreetName = value;
					this.SendPropertyChanged("StreetName");
					this.OnStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetType", DbType="NVarChar(MAX)")]
		public string StreetType
		{
			get
			{
				return this._StreetType;
			}
			set
			{
				if ((this._StreetType != value))
				{
					this.OnStreetTypeChanging(value);
					this.SendPropertyChanging();
					this._StreetType = value;
					this.SendPropertyChanged("StreetType");
					this.OnStreetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalDetail_Address", Storage="_PersonalDetail", ThisKey="PersonalDetailID", OtherKey="PersonalDetailID", IsForeignKey=true)]
		public PersonalDetail PersonalDetail
		{
			get
			{
				return this._PersonalDetail.Entity;
			}
			set
			{
				PersonalDetail previousValue = this._PersonalDetail.Entity;
				if (((previousValue != value) 
							|| (this._PersonalDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalDetail.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._PersonalDetail.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._PersonalDetailID = value.PersonalDetailID;
					}
					else
					{
						this._PersonalDetailID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("PersonalDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GreenidVerification")]
	public partial class GreenidVerification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _GreenidVerificationID;
		
		private string _VerificationResult;
		
		private string _VerificationId;
		
		private string _VerificationToken;
		
		private string _GivenName;
		
		private string _MiddleName;
		
		private string _Surname;
		
		private string _Email;
		
		private string _Dateofbirth;
		
		private string _FlatNumber;
		
		private string _StreetNumber;
		
		private string _StreetName;
		
		private string _StreetType;
		
		private string _Suburb;
		
		private string _State;
		
		private string _Postcode;
		
		private string _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGreenidVerificationIDChanging(decimal value);
    partial void OnGreenidVerificationIDChanged();
    partial void OnVerificationResultChanging(string value);
    partial void OnVerificationResultChanged();
    partial void OnVerificationIdChanging(string value);
    partial void OnVerificationIdChanged();
    partial void OnVerificationTokenChanging(string value);
    partial void OnVerificationTokenChanged();
    partial void OnGivenNameChanging(string value);
    partial void OnGivenNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateofbirthChanging(string value);
    partial void OnDateofbirthChanged();
    partial void OnFlatNumberChanging(string value);
    partial void OnFlatNumberChanged();
    partial void OnStreetNumberChanging(string value);
    partial void OnStreetNumberChanged();
    partial void OnStreetNameChanging(string value);
    partial void OnStreetNameChanged();
    partial void OnStreetTypeChanging(string value);
    partial void OnStreetTypeChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public GreenidVerification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreenidVerificationID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal GreenidVerificationID
		{
			get
			{
				return this._GreenidVerificationID;
			}
			set
			{
				if ((this._GreenidVerificationID != value))
				{
					this.OnGreenidVerificationIDChanging(value);
					this.SendPropertyChanging();
					this._GreenidVerificationID = value;
					this.SendPropertyChanged("GreenidVerificationID");
					this.OnGreenidVerificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationResult", DbType="NVarChar(MAX)")]
		public string VerificationResult
		{
			get
			{
				return this._VerificationResult;
			}
			set
			{
				if ((this._VerificationResult != value))
				{
					this.OnVerificationResultChanging(value);
					this.SendPropertyChanging();
					this._VerificationResult = value;
					this.SendPropertyChanged("VerificationResult");
					this.OnVerificationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationId", DbType="NVarChar(MAX)")]
		public string VerificationId
		{
			get
			{
				return this._VerificationId;
			}
			set
			{
				if ((this._VerificationId != value))
				{
					this.OnVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationId = value;
					this.SendPropertyChanged("VerificationId");
					this.OnVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationToken", DbType="NVarChar(MAX)")]
		public string VerificationToken
		{
			get
			{
				return this._VerificationToken;
			}
			set
			{
				if ((this._VerificationToken != value))
				{
					this.OnVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._VerificationToken = value;
					this.SendPropertyChanged("VerificationToken");
					this.OnVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenName", DbType="NVarChar(MAX)")]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this.OnGivenNameChanging(value);
					this.SendPropertyChanging();
					this._GivenName = value;
					this.SendPropertyChanged("GivenName");
					this.OnGivenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(MAX)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(MAX)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dateofbirth", DbType="NVarChar(MAX)")]
		public string Dateofbirth
		{
			get
			{
				return this._Dateofbirth;
			}
			set
			{
				if ((this._Dateofbirth != value))
				{
					this.OnDateofbirthChanging(value);
					this.SendPropertyChanging();
					this._Dateofbirth = value;
					this.SendPropertyChanged("Dateofbirth");
					this.OnDateofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNumber", DbType="NVarChar(MAX)")]
		public string FlatNumber
		{
			get
			{
				return this._FlatNumber;
			}
			set
			{
				if ((this._FlatNumber != value))
				{
					this.OnFlatNumberChanging(value);
					this.SendPropertyChanging();
					this._FlatNumber = value;
					this.SendPropertyChanged("FlatNumber");
					this.OnFlatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNumber", DbType="NVarChar(MAX)")]
		public string StreetNumber
		{
			get
			{
				return this._StreetNumber;
			}
			set
			{
				if ((this._StreetNumber != value))
				{
					this.OnStreetNumberChanging(value);
					this.SendPropertyChanging();
					this._StreetNumber = value;
					this.SendPropertyChanged("StreetNumber");
					this.OnStreetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetName", DbType="NVarChar(MAX)")]
		public string StreetName
		{
			get
			{
				return this._StreetName;
			}
			set
			{
				if ((this._StreetName != value))
				{
					this.OnStreetNameChanging(value);
					this.SendPropertyChanging();
					this._StreetName = value;
					this.SendPropertyChanged("StreetName");
					this.OnStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetType", DbType="NVarChar(MAX)")]
		public string StreetType
		{
			get
			{
				return this._StreetType;
			}
			set
			{
				if ((this._StreetType != value))
				{
					this.OnStreetTypeChanging(value);
					this.SendPropertyChanging();
					this._StreetType = value;
					this.SendPropertyChanged("StreetType");
					this.OnStreetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(MAX)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applicant")]
	public partial class Applicant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ApplicantID;
		
		private System.Nullable<System.DateTime> _CreationDateTime;
		
		private string _AccountType;
		
		private string _Status;
		
		private System.Nullable<decimal> _AdviserID;
		
		private System.Nullable<bool> _Approved;
		
		private System.Nullable<decimal> _Percent;
		
		private string _VerificationId;
		
		private string _VerificationResult;
		
		private EntitySet<AuthorisedRepresentativeDetail> _AuthorisedRepresentativeDetails;
		
		private EntitySet<FinancialAdviserDetail> _FinancialAdviserDetails;
		
		private EntitySet<PaymentMethod> _PaymentMethods;
		
		private EntitySet<UploadDocument> _UploadDocuments;
		
		private EntitySet<ApplicantNoVerificationId> _ApplicantNoVerificationIds;
		
		private EntitySet<InvestmentDetail> _InvestmentDetails;
		
		private EntitySet<TrustCompany> _TrustCompanies;
		
		private EntitySet<PersonalDetail> _PersonalDetails;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicantIDChanging(decimal value);
    partial void OnApplicantIDChanged();
    partial void OnCreationDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateTimeChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAdviserIDChanging(System.Nullable<decimal> value);
    partial void OnAdviserIDChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnPercentChanging(System.Nullable<decimal> value);
    partial void OnPercentChanged();
    partial void OnVerificationIdChanging(string value);
    partial void OnVerificationIdChanged();
    partial void OnVerificationResultChanging(string value);
    partial void OnVerificationResultChanged();
    #endregion
		
		public Applicant()
		{
			this._AuthorisedRepresentativeDetails = new EntitySet<AuthorisedRepresentativeDetail>(new Action<AuthorisedRepresentativeDetail>(this.attach_AuthorisedRepresentativeDetails), new Action<AuthorisedRepresentativeDetail>(this.detach_AuthorisedRepresentativeDetails));
			this._FinancialAdviserDetails = new EntitySet<FinancialAdviserDetail>(new Action<FinancialAdviserDetail>(this.attach_FinancialAdviserDetails), new Action<FinancialAdviserDetail>(this.detach_FinancialAdviserDetails));
			this._PaymentMethods = new EntitySet<PaymentMethod>(new Action<PaymentMethod>(this.attach_PaymentMethods), new Action<PaymentMethod>(this.detach_PaymentMethods));
			this._UploadDocuments = new EntitySet<UploadDocument>(new Action<UploadDocument>(this.attach_UploadDocuments), new Action<UploadDocument>(this.detach_UploadDocuments));
			this._ApplicantNoVerificationIds = new EntitySet<ApplicantNoVerificationId>(new Action<ApplicantNoVerificationId>(this.attach_ApplicantNoVerificationIds), new Action<ApplicantNoVerificationId>(this.detach_ApplicantNoVerificationIds));
			this._InvestmentDetails = new EntitySet<InvestmentDetail>(new Action<InvestmentDetail>(this.attach_InvestmentDetails), new Action<InvestmentDetail>(this.detach_InvestmentDetails));
			this._TrustCompanies = new EntitySet<TrustCompany>(new Action<TrustCompany>(this.attach_TrustCompanies), new Action<TrustCompany>(this.detach_TrustCompanies));
			this._PersonalDetails = new EntitySet<PersonalDetail>(new Action<PersonalDetail>(this.attach_PersonalDetails), new Action<PersonalDetail>(this.detach_PersonalDetails));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(MAX)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviserID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AdviserID
		{
			get
			{
				return this._AdviserID;
			}
			set
			{
				if ((this._AdviserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdviserIDChanging(value);
					this.SendPropertyChanging();
					this._AdviserID = value;
					this.SendPropertyChanged("AdviserID");
					this.OnAdviserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percent]", Storage="_Percent", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Percent
		{
			get
			{
				return this._Percent;
			}
			set
			{
				if ((this._Percent != value))
				{
					this.OnPercentChanging(value);
					this.SendPropertyChanging();
					this._Percent = value;
					this.SendPropertyChanged("Percent");
					this.OnPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationId", DbType="NVarChar(MAX)")]
		public string VerificationId
		{
			get
			{
				return this._VerificationId;
			}
			set
			{
				if ((this._VerificationId != value))
				{
					this.OnVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationId = value;
					this.SendPropertyChanged("VerificationId");
					this.OnVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationResult", DbType="NVarChar(MAX)")]
		public string VerificationResult
		{
			get
			{
				return this._VerificationResult;
			}
			set
			{
				if ((this._VerificationResult != value))
				{
					this.OnVerificationResultChanging(value);
					this.SendPropertyChanging();
					this._VerificationResult = value;
					this.SendPropertyChanged("VerificationResult");
					this.OnVerificationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_AuthorisedRepresentativeDetail", Storage="_AuthorisedRepresentativeDetails", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<AuthorisedRepresentativeDetail> AuthorisedRepresentativeDetails
		{
			get
			{
				return this._AuthorisedRepresentativeDetails;
			}
			set
			{
				this._AuthorisedRepresentativeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_FinancialAdviserDetail", Storage="_FinancialAdviserDetails", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<FinancialAdviserDetail> FinancialAdviserDetails
		{
			get
			{
				return this._FinancialAdviserDetails;
			}
			set
			{
				this._FinancialAdviserDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_PaymentMethod", Storage="_PaymentMethods", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<PaymentMethod> PaymentMethods
		{
			get
			{
				return this._PaymentMethods;
			}
			set
			{
				this._PaymentMethods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_UploadDocument", Storage="_UploadDocuments", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<UploadDocument> UploadDocuments
		{
			get
			{
				return this._UploadDocuments;
			}
			set
			{
				this._UploadDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_ApplicantNoVerificationId", Storage="_ApplicantNoVerificationIds", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<ApplicantNoVerificationId> ApplicantNoVerificationIds
		{
			get
			{
				return this._ApplicantNoVerificationIds;
			}
			set
			{
				this._ApplicantNoVerificationIds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_InvestmentDetail", Storage="_InvestmentDetails", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<InvestmentDetail> InvestmentDetails
		{
			get
			{
				return this._InvestmentDetails;
			}
			set
			{
				this._InvestmentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_TrustCompany", Storage="_TrustCompanies", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<TrustCompany> TrustCompanies
		{
			get
			{
				return this._TrustCompanies;
			}
			set
			{
				this._TrustCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_PersonalDetail", Storage="_PersonalDetails", ThisKey="ApplicantID", OtherKey="ApplicantID")]
		public EntitySet<PersonalDetail> PersonalDetails
		{
			get
			{
				return this._PersonalDetails;
			}
			set
			{
				this._PersonalDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Applicant", Storage="_User", ThisKey="AdviserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Applicants.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Applicants.Add(this);
						this._AdviserID = value.UserID;
					}
					else
					{
						this._AdviserID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuthorisedRepresentativeDetails(AuthorisedRepresentativeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_AuthorisedRepresentativeDetails(AuthorisedRepresentativeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_FinancialAdviserDetails(FinancialAdviserDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_FinancialAdviserDetails(FinancialAdviserDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_PaymentMethods(PaymentMethod entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_PaymentMethods(PaymentMethod entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_UploadDocuments(UploadDocument entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_UploadDocuments(UploadDocument entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_ApplicantNoVerificationIds(ApplicantNoVerificationId entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_ApplicantNoVerificationIds(ApplicantNoVerificationId entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_InvestmentDetails(InvestmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_InvestmentDetails(InvestmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_TrustCompanies(TrustCompany entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_TrustCompanies(TrustCompany entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
		
		private void attach_PersonalDetails(PersonalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = this;
		}
		
		private void detach_PersonalDetails(PersonalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Applicant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicantNoVerificationId")]
	public partial class ApplicantNoVerificationId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ApplicantNoVerificationId1;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private System.Nullable<int> _ApplicantNo;
		
		private string _VerificationId;
		
		private string _VerificationResult;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicantNoVerificationId1Changing(decimal value);
    partial void OnApplicantNoVerificationId1Changed();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnApplicantNoChanging(System.Nullable<int> value);
    partial void OnApplicantNoChanged();
    partial void OnVerificationIdChanging(string value);
    partial void OnVerificationIdChanged();
    partial void OnVerificationResultChanging(string value);
    partial void OnVerificationResultChanged();
    #endregion
		
		public ApplicantNoVerificationId()
		{
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ApplicantNoVerificationId", Storage="_ApplicantNoVerificationId1", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ApplicantNoVerificationId1
		{
			get
			{
				return this._ApplicantNoVerificationId1;
			}
			set
			{
				if ((this._ApplicantNoVerificationId1 != value))
				{
					this.OnApplicantNoVerificationId1Changing(value);
					this.SendPropertyChanging();
					this._ApplicantNoVerificationId1 = value;
					this.SendPropertyChanged("ApplicantNoVerificationId1");
					this.OnApplicantNoVerificationId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantNo", DbType="Int")]
		public System.Nullable<int> ApplicantNo
		{
			get
			{
				return this._ApplicantNo;
			}
			set
			{
				if ((this._ApplicantNo != value))
				{
					this.OnApplicantNoChanging(value);
					this.SendPropertyChanging();
					this._ApplicantNo = value;
					this.SendPropertyChanged("ApplicantNo");
					this.OnApplicantNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationId", DbType="NVarChar(MAX)")]
		public string VerificationId
		{
			get
			{
				return this._VerificationId;
			}
			set
			{
				if ((this._VerificationId != value))
				{
					this.OnVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationId = value;
					this.SendPropertyChanged("VerificationId");
					this.OnVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationResult", DbType="NVarChar(MAX)")]
		public string VerificationResult
		{
			get
			{
				return this._VerificationResult;
			}
			set
			{
				if ((this._VerificationResult != value))
				{
					this.OnVerificationResultChanging(value);
					this.SendPropertyChanging();
					this._VerificationResult = value;
					this.SendPropertyChanged("VerificationResult");
					this.OnVerificationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_ApplicantNoVerificationId", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.ApplicantNoVerificationIds.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.ApplicantNoVerificationIds.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvestmentDetails")]
	public partial class InvestmentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _InvestmentDetailsID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _FundName;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _RegularSavingPlanPerMonth;
		
		private System.Nullable<bool> _Reinvest;
		
		private string _SourceofIncome;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvestmentDetailsIDChanging(decimal value);
    partial void OnInvestmentDetailsIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnFundNameChanging(string value);
    partial void OnFundNameChanged();
    partial void OnInvestmentAmountChanging(System.Nullable<decimal> value);
    partial void OnInvestmentAmountChanged();
    partial void OnRegularSavingPlanPerMonthChanging(System.Nullable<decimal> value);
    partial void OnRegularSavingPlanPerMonthChanged();
    partial void OnReinvestChanging(System.Nullable<bool> value);
    partial void OnReinvestChanged();
    partial void OnSourceofIncomeChanging(string value);
    partial void OnSourceofIncomeChanged();
    #endregion
		
		public InvestmentDetail()
		{
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDetailsID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal InvestmentDetailsID
		{
			get
			{
				return this._InvestmentDetailsID;
			}
			set
			{
				if ((this._InvestmentDetailsID != value))
				{
					this.OnInvestmentDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentDetailsID = value;
					this.SendPropertyChanged("InvestmentDetailsID");
					this.OnInvestmentDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(MAX)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this.OnFundNameChanging(value);
					this.SendPropertyChanging();
					this._FundName = value;
					this.SendPropertyChanged("FundName");
					this.OnFundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this.OnInvestmentAmountChanging(value);
					this.SendPropertyChanging();
					this._InvestmentAmount = value;
					this.SendPropertyChanged("InvestmentAmount");
					this.OnInvestmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularSavingPlanPerMonth", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RegularSavingPlanPerMonth
		{
			get
			{
				return this._RegularSavingPlanPerMonth;
			}
			set
			{
				if ((this._RegularSavingPlanPerMonth != value))
				{
					this.OnRegularSavingPlanPerMonthChanging(value);
					this.SendPropertyChanging();
					this._RegularSavingPlanPerMonth = value;
					this.SendPropertyChanged("RegularSavingPlanPerMonth");
					this.OnRegularSavingPlanPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reinvest", DbType="Bit")]
		public System.Nullable<bool> Reinvest
		{
			get
			{
				return this._Reinvest;
			}
			set
			{
				if ((this._Reinvest != value))
				{
					this.OnReinvestChanging(value);
					this.SendPropertyChanging();
					this._Reinvest = value;
					this.SendPropertyChanged("Reinvest");
					this.OnReinvestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceofIncome", DbType="NVarChar(MAX)")]
		public string SourceofIncome
		{
			get
			{
				return this._SourceofIncome;
			}
			set
			{
				if ((this._SourceofIncome != value))
				{
					this.OnSourceofIncomeChanging(value);
					this.SendPropertyChanging();
					this._SourceofIncome = value;
					this.SendPropertyChanged("SourceofIncome");
					this.OnSourceofIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_InvestmentDetail", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.InvestmentDetails.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.InvestmentDetails.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitLead")]
	public partial class VisitLead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _VisitLeadID;
		
		private string _Email;
		
		private string _MobileNo;
		
		private System.Nullable<System.DateTime> _CreationDateTime;
		
		private string _FullName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitLeadIDChanging(decimal value);
    partial void OnVisitLeadIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnCreationDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateTimeChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public VisitLead()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitLeadID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal VisitLeadID
		{
			get
			{
				return this._VisitLeadID;
			}
			set
			{
				if ((this._VisitLeadID != value))
				{
					this.OnVisitLeadIDChanging(value);
					this.SendPropertyChanging();
					this._VisitLeadID = value;
					this.SendPropertyChanged("VisitLeadID");
					this.OnVisitLeadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustCompany")]
	public partial class TrustCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _TrustCompanyID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private string _FullName;
		
		private string _ACN_ABN;
		
		private string _AusTFN;
		
		private string _TitleCP;
		
		private string _FullNameCP;
		
		private string _SurnameCP;
		
		private string _BusinessNoCP;
		
		private string _MobileNoCP;
		
		private string _AreaCodeB;
		
		private string _EmailAddressCP;
		
		private string _OccupationCP;
		
		private string _FullNameFC;
		
		private string _ARBN_FC;
		
		private System.Nullable<bool> _IsRegByForeignRegBodyFC;
		
		private string _ForeignRegBodyNameFC;
		
		private string _StatusFC;
		
		private string _NameLocaLAgent;
		
		private string _FullNameFCNR;
		
		private System.Nullable<bool> _IsRegByForeignRegBodyFCNR;
		
		private string _ForeignRegBodyNameFCNR;
		
		private string _ForeignRegBodyIdenNoFCNR;
		
		private System.Nullable<bool> _IsRegInUs;
		
		private System.Nullable<bool> _IspublicCompany;
		
		private string _NameTrust;
		
		private string _ABN_Trust;
		
		private string _AusTFN_Trust;
		
		private string _LeadEmail;
		
		private EntitySet<Shareholder> _Shareholders;
		
		private EntitySet<TrustCompanyAddress> _TrustCompanyAddresses;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustCompanyIDChanging(decimal value);
    partial void OnTrustCompanyIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnACN_ABNChanging(string value);
    partial void OnACN_ABNChanged();
    partial void OnAusTFNChanging(string value);
    partial void OnAusTFNChanged();
    partial void OnTitleCPChanging(string value);
    partial void OnTitleCPChanged();
    partial void OnFullNameCPChanging(string value);
    partial void OnFullNameCPChanged();
    partial void OnSurnameCPChanging(string value);
    partial void OnSurnameCPChanged();
    partial void OnBusinessNoCPChanging(string value);
    partial void OnBusinessNoCPChanged();
    partial void OnMobileNoCPChanging(string value);
    partial void OnMobileNoCPChanged();
    partial void OnAreaCodeBChanging(string value);
    partial void OnAreaCodeBChanged();
    partial void OnEmailAddressCPChanging(string value);
    partial void OnEmailAddressCPChanged();
    partial void OnOccupationCPChanging(string value);
    partial void OnOccupationCPChanged();
    partial void OnFullNameFCChanging(string value);
    partial void OnFullNameFCChanged();
    partial void OnARBN_FCChanging(string value);
    partial void OnARBN_FCChanged();
    partial void OnIsRegByForeignRegBodyFCChanging(System.Nullable<bool> value);
    partial void OnIsRegByForeignRegBodyFCChanged();
    partial void OnForeignRegBodyNameFCChanging(string value);
    partial void OnForeignRegBodyNameFCChanged();
    partial void OnStatusFCChanging(string value);
    partial void OnStatusFCChanged();
    partial void OnNameLocaLAgentChanging(string value);
    partial void OnNameLocaLAgentChanged();
    partial void OnFullNameFCNRChanging(string value);
    partial void OnFullNameFCNRChanged();
    partial void OnIsRegByForeignRegBodyFCNRChanging(System.Nullable<bool> value);
    partial void OnIsRegByForeignRegBodyFCNRChanged();
    partial void OnForeignRegBodyNameFCNRChanging(string value);
    partial void OnForeignRegBodyNameFCNRChanged();
    partial void OnForeignRegBodyIdenNoFCNRChanging(string value);
    partial void OnForeignRegBodyIdenNoFCNRChanged();
    partial void OnIsRegInUsChanging(System.Nullable<bool> value);
    partial void OnIsRegInUsChanged();
    partial void OnIspublicCompanyChanging(System.Nullable<bool> value);
    partial void OnIspublicCompanyChanged();
    partial void OnNameTrustChanging(string value);
    partial void OnNameTrustChanged();
    partial void OnABN_TrustChanging(string value);
    partial void OnABN_TrustChanged();
    partial void OnAusTFN_TrustChanging(string value);
    partial void OnAusTFN_TrustChanged();
    partial void OnLeadEmailChanging(string value);
    partial void OnLeadEmailChanged();
    #endregion
		
		public TrustCompany()
		{
			this._Shareholders = new EntitySet<Shareholder>(new Action<Shareholder>(this.attach_Shareholders), new Action<Shareholder>(this.detach_Shareholders));
			this._TrustCompanyAddresses = new EntitySet<TrustCompanyAddress>(new Action<TrustCompanyAddress>(this.attach_TrustCompanyAddresses), new Action<TrustCompanyAddress>(this.detach_TrustCompanyAddresses));
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustCompanyID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal TrustCompanyID
		{
			get
			{
				return this._TrustCompanyID;
			}
			set
			{
				if ((this._TrustCompanyID != value))
				{
					this.OnTrustCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._TrustCompanyID = value;
					this.SendPropertyChanged("TrustCompanyID");
					this.OnTrustCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACN_ABN", DbType="NVarChar(MAX)")]
		public string ACN_ABN
		{
			get
			{
				return this._ACN_ABN;
			}
			set
			{
				if ((this._ACN_ABN != value))
				{
					this.OnACN_ABNChanging(value);
					this.SendPropertyChanging();
					this._ACN_ABN = value;
					this.SendPropertyChanged("ACN_ABN");
					this.OnACN_ABNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AusTFN", DbType="NVarChar(MAX)")]
		public string AusTFN
		{
			get
			{
				return this._AusTFN;
			}
			set
			{
				if ((this._AusTFN != value))
				{
					this.OnAusTFNChanging(value);
					this.SendPropertyChanging();
					this._AusTFN = value;
					this.SendPropertyChanged("AusTFN");
					this.OnAusTFNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleCP", DbType="NVarChar(10)")]
		public string TitleCP
		{
			get
			{
				return this._TitleCP;
			}
			set
			{
				if ((this._TitleCP != value))
				{
					this.OnTitleCPChanging(value);
					this.SendPropertyChanging();
					this._TitleCP = value;
					this.SendPropertyChanged("TitleCP");
					this.OnTitleCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameCP", DbType="NVarChar(MAX)")]
		public string FullNameCP
		{
			get
			{
				return this._FullNameCP;
			}
			set
			{
				if ((this._FullNameCP != value))
				{
					this.OnFullNameCPChanging(value);
					this.SendPropertyChanging();
					this._FullNameCP = value;
					this.SendPropertyChanged("FullNameCP");
					this.OnFullNameCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurnameCP", DbType="NVarChar(MAX)")]
		public string SurnameCP
		{
			get
			{
				return this._SurnameCP;
			}
			set
			{
				if ((this._SurnameCP != value))
				{
					this.OnSurnameCPChanging(value);
					this.SendPropertyChanging();
					this._SurnameCP = value;
					this.SendPropertyChanged("SurnameCP");
					this.OnSurnameCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessNoCP", DbType="NVarChar(50)")]
		public string BusinessNoCP
		{
			get
			{
				return this._BusinessNoCP;
			}
			set
			{
				if ((this._BusinessNoCP != value))
				{
					this.OnBusinessNoCPChanging(value);
					this.SendPropertyChanging();
					this._BusinessNoCP = value;
					this.SendPropertyChanged("BusinessNoCP");
					this.OnBusinessNoCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNoCP", DbType="NVarChar(50)")]
		public string MobileNoCP
		{
			get
			{
				return this._MobileNoCP;
			}
			set
			{
				if ((this._MobileNoCP != value))
				{
					this.OnMobileNoCPChanging(value);
					this.SendPropertyChanging();
					this._MobileNoCP = value;
					this.SendPropertyChanged("MobileNoCP");
					this.OnMobileNoCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCodeB", DbType="NVarChar(10)")]
		public string AreaCodeB
		{
			get
			{
				return this._AreaCodeB;
			}
			set
			{
				if ((this._AreaCodeB != value))
				{
					this.OnAreaCodeBChanging(value);
					this.SendPropertyChanging();
					this._AreaCodeB = value;
					this.SendPropertyChanged("AreaCodeB");
					this.OnAreaCodeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddressCP", DbType="NVarChar(MAX)")]
		public string EmailAddressCP
		{
			get
			{
				return this._EmailAddressCP;
			}
			set
			{
				if ((this._EmailAddressCP != value))
				{
					this.OnEmailAddressCPChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressCP = value;
					this.SendPropertyChanged("EmailAddressCP");
					this.OnEmailAddressCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationCP", DbType="NVarChar(MAX)")]
		public string OccupationCP
		{
			get
			{
				return this._OccupationCP;
			}
			set
			{
				if ((this._OccupationCP != value))
				{
					this.OnOccupationCPChanging(value);
					this.SendPropertyChanging();
					this._OccupationCP = value;
					this.SendPropertyChanged("OccupationCP");
					this.OnOccupationCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameFC", DbType="NVarChar(MAX)")]
		public string FullNameFC
		{
			get
			{
				return this._FullNameFC;
			}
			set
			{
				if ((this._FullNameFC != value))
				{
					this.OnFullNameFCChanging(value);
					this.SendPropertyChanging();
					this._FullNameFC = value;
					this.SendPropertyChanged("FullNameFC");
					this.OnFullNameFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARBN_FC", DbType="NVarChar(MAX)")]
		public string ARBN_FC
		{
			get
			{
				return this._ARBN_FC;
			}
			set
			{
				if ((this._ARBN_FC != value))
				{
					this.OnARBN_FCChanging(value);
					this.SendPropertyChanging();
					this._ARBN_FC = value;
					this.SendPropertyChanged("ARBN_FC");
					this.OnARBN_FCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegByForeignRegBodyFC", DbType="Bit")]
		public System.Nullable<bool> IsRegByForeignRegBodyFC
		{
			get
			{
				return this._IsRegByForeignRegBodyFC;
			}
			set
			{
				if ((this._IsRegByForeignRegBodyFC != value))
				{
					this.OnIsRegByForeignRegBodyFCChanging(value);
					this.SendPropertyChanging();
					this._IsRegByForeignRegBodyFC = value;
					this.SendPropertyChanged("IsRegByForeignRegBodyFC");
					this.OnIsRegByForeignRegBodyFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignRegBodyNameFC", DbType="NVarChar(MAX)")]
		public string ForeignRegBodyNameFC
		{
			get
			{
				return this._ForeignRegBodyNameFC;
			}
			set
			{
				if ((this._ForeignRegBodyNameFC != value))
				{
					this.OnForeignRegBodyNameFCChanging(value);
					this.SendPropertyChanging();
					this._ForeignRegBodyNameFC = value;
					this.SendPropertyChanged("ForeignRegBodyNameFC");
					this.OnForeignRegBodyNameFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFC", DbType="NVarChar(MAX)")]
		public string StatusFC
		{
			get
			{
				return this._StatusFC;
			}
			set
			{
				if ((this._StatusFC != value))
				{
					this.OnStatusFCChanging(value);
					this.SendPropertyChanging();
					this._StatusFC = value;
					this.SendPropertyChanged("StatusFC");
					this.OnStatusFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLocaLAgent", DbType="NVarChar(MAX)")]
		public string NameLocaLAgent
		{
			get
			{
				return this._NameLocaLAgent;
			}
			set
			{
				if ((this._NameLocaLAgent != value))
				{
					this.OnNameLocaLAgentChanging(value);
					this.SendPropertyChanging();
					this._NameLocaLAgent = value;
					this.SendPropertyChanged("NameLocaLAgent");
					this.OnNameLocaLAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameFCNR", DbType="NVarChar(MAX)")]
		public string FullNameFCNR
		{
			get
			{
				return this._FullNameFCNR;
			}
			set
			{
				if ((this._FullNameFCNR != value))
				{
					this.OnFullNameFCNRChanging(value);
					this.SendPropertyChanging();
					this._FullNameFCNR = value;
					this.SendPropertyChanged("FullNameFCNR");
					this.OnFullNameFCNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegByForeignRegBodyFCNR", DbType="Bit")]
		public System.Nullable<bool> IsRegByForeignRegBodyFCNR
		{
			get
			{
				return this._IsRegByForeignRegBodyFCNR;
			}
			set
			{
				if ((this._IsRegByForeignRegBodyFCNR != value))
				{
					this.OnIsRegByForeignRegBodyFCNRChanging(value);
					this.SendPropertyChanging();
					this._IsRegByForeignRegBodyFCNR = value;
					this.SendPropertyChanged("IsRegByForeignRegBodyFCNR");
					this.OnIsRegByForeignRegBodyFCNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignRegBodyNameFCNR", DbType="NVarChar(MAX)")]
		public string ForeignRegBodyNameFCNR
		{
			get
			{
				return this._ForeignRegBodyNameFCNR;
			}
			set
			{
				if ((this._ForeignRegBodyNameFCNR != value))
				{
					this.OnForeignRegBodyNameFCNRChanging(value);
					this.SendPropertyChanging();
					this._ForeignRegBodyNameFCNR = value;
					this.SendPropertyChanged("ForeignRegBodyNameFCNR");
					this.OnForeignRegBodyNameFCNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignRegBodyIdenNoFCNR", DbType="NVarChar(MAX)")]
		public string ForeignRegBodyIdenNoFCNR
		{
			get
			{
				return this._ForeignRegBodyIdenNoFCNR;
			}
			set
			{
				if ((this._ForeignRegBodyIdenNoFCNR != value))
				{
					this.OnForeignRegBodyIdenNoFCNRChanging(value);
					this.SendPropertyChanging();
					this._ForeignRegBodyIdenNoFCNR = value;
					this.SendPropertyChanged("ForeignRegBodyIdenNoFCNR");
					this.OnForeignRegBodyIdenNoFCNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegInUs", DbType="Bit")]
		public System.Nullable<bool> IsRegInUs
		{
			get
			{
				return this._IsRegInUs;
			}
			set
			{
				if ((this._IsRegInUs != value))
				{
					this.OnIsRegInUsChanging(value);
					this.SendPropertyChanging();
					this._IsRegInUs = value;
					this.SendPropertyChanged("IsRegInUs");
					this.OnIsRegInUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IspublicCompany", DbType="Bit")]
		public System.Nullable<bool> IspublicCompany
		{
			get
			{
				return this._IspublicCompany;
			}
			set
			{
				if ((this._IspublicCompany != value))
				{
					this.OnIspublicCompanyChanging(value);
					this.SendPropertyChanging();
					this._IspublicCompany = value;
					this.SendPropertyChanged("IspublicCompany");
					this.OnIspublicCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTrust", DbType="NVarChar(MAX)")]
		public string NameTrust
		{
			get
			{
				return this._NameTrust;
			}
			set
			{
				if ((this._NameTrust != value))
				{
					this.OnNameTrustChanging(value);
					this.SendPropertyChanging();
					this._NameTrust = value;
					this.SendPropertyChanged("NameTrust");
					this.OnNameTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABN_Trust", DbType="NVarChar(MAX)")]
		public string ABN_Trust
		{
			get
			{
				return this._ABN_Trust;
			}
			set
			{
				if ((this._ABN_Trust != value))
				{
					this.OnABN_TrustChanging(value);
					this.SendPropertyChanging();
					this._ABN_Trust = value;
					this.SendPropertyChanged("ABN_Trust");
					this.OnABN_TrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AusTFN_Trust", DbType="NVarChar(MAX)")]
		public string AusTFN_Trust
		{
			get
			{
				return this._AusTFN_Trust;
			}
			set
			{
				if ((this._AusTFN_Trust != value))
				{
					this.OnAusTFN_TrustChanging(value);
					this.SendPropertyChanging();
					this._AusTFN_Trust = value;
					this.SendPropertyChanged("AusTFN_Trust");
					this.OnAusTFN_TrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadEmail", DbType="NVarChar(MAX)")]
		public string LeadEmail
		{
			get
			{
				return this._LeadEmail;
			}
			set
			{
				if ((this._LeadEmail != value))
				{
					this.OnLeadEmailChanging(value);
					this.SendPropertyChanging();
					this._LeadEmail = value;
					this.SendPropertyChanged("LeadEmail");
					this.OnLeadEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustCompany_Shareholder", Storage="_Shareholders", ThisKey="TrustCompanyID", OtherKey="TrustCompanyID")]
		public EntitySet<Shareholder> Shareholders
		{
			get
			{
				return this._Shareholders;
			}
			set
			{
				this._Shareholders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustCompany_TrustCompanyAddress", Storage="_TrustCompanyAddresses", ThisKey="TrustCompanyID", OtherKey="TrustCompanyID")]
		public EntitySet<TrustCompanyAddress> TrustCompanyAddresses
		{
			get
			{
				return this._TrustCompanyAddresses;
			}
			set
			{
				this._TrustCompanyAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_TrustCompany", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.TrustCompanies.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.TrustCompanies.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shareholders(Shareholder entity)
		{
			this.SendPropertyChanging();
			entity.TrustCompany = this;
		}
		
		private void detach_Shareholders(Shareholder entity)
		{
			this.SendPropertyChanging();
			entity.TrustCompany = null;
		}
		
		private void attach_TrustCompanyAddresses(TrustCompanyAddress entity)
		{
			this.SendPropertyChanging();
			entity.TrustCompany = this;
		}
		
		private void detach_TrustCompanyAddresses(TrustCompanyAddress entity)
		{
			this.SendPropertyChanging();
			entity.TrustCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalDetails")]
	public partial class PersonalDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PersonalDetailID;
		
		private System.Nullable<decimal> _ApplicantID;
		
		private System.Nullable<int> _ApplicantNo;
		
		private string _Title;
		
		private string _FullName;
		
		private string _MiddleName;
		
		private string _Surname;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthCountry;
		
		private string _Occupation;
		
		private System.Nullable<bool> _IsBeneficiary;
		
		private string _HomeNo;
		
		private string _BusinessNo;
		
		private string _MobileNo;
		
		private string _AreaCodeH;
		
		private string _AreaCodeB;
		
		private string _EmailAddress;
		
		private System.Nullable<bool> _IsAusResident;
		
		private string _TaxFileNoExemptionCode;
		
		private string _ExemptionReason;
		
		private string _CountryTax;
		
		private System.Nullable<bool> _IsUSCitizen;
		
		private System.Nullable<bool> _IsFATCA;
		
		private string _NameTrust;
		
		private string _ABN;
		
		private string _AusTFN;
		
		private string _LeadEmail;
		
		private string _JointInvestors;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<Applicant> _Applicant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonalDetailIDChanging(decimal value);
    partial void OnPersonalDetailIDChanged();
    partial void OnApplicantIDChanging(System.Nullable<decimal> value);
    partial void OnApplicantIDChanged();
    partial void OnApplicantNoChanging(System.Nullable<int> value);
    partial void OnApplicantNoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBirthCountryChanging(string value);
    partial void OnBirthCountryChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnIsBeneficiaryChanging(System.Nullable<bool> value);
    partial void OnIsBeneficiaryChanged();
    partial void OnHomeNoChanging(string value);
    partial void OnHomeNoChanged();
    partial void OnBusinessNoChanging(string value);
    partial void OnBusinessNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAreaCodeHChanging(string value);
    partial void OnAreaCodeHChanged();
    partial void OnAreaCodeBChanging(string value);
    partial void OnAreaCodeBChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnIsAusResidentChanging(System.Nullable<bool> value);
    partial void OnIsAusResidentChanged();
    partial void OnTaxFileNoExemptionCodeChanging(string value);
    partial void OnTaxFileNoExemptionCodeChanged();
    partial void OnExemptionReasonChanging(string value);
    partial void OnExemptionReasonChanged();
    partial void OnCountryTaxChanging(string value);
    partial void OnCountryTaxChanged();
    partial void OnIsUSCitizenChanging(System.Nullable<bool> value);
    partial void OnIsUSCitizenChanged();
    partial void OnIsFATCAChanging(System.Nullable<bool> value);
    partial void OnIsFATCAChanged();
    partial void OnNameTrustChanging(string value);
    partial void OnNameTrustChanged();
    partial void OnABNChanging(string value);
    partial void OnABNChanged();
    partial void OnAusTFNChanging(string value);
    partial void OnAusTFNChanged();
    partial void OnLeadEmailChanging(string value);
    partial void OnLeadEmailChanged();
    partial void OnJointInvestorsChanging(string value);
    partial void OnJointInvestorsChanged();
    #endregion
		
		public PersonalDetail()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Applicant = default(EntityRef<Applicant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDetailID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal PersonalDetailID
		{
			get
			{
				return this._PersonalDetailID;
			}
			set
			{
				if ((this._PersonalDetailID != value))
				{
					this.OnPersonalDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PersonalDetailID = value;
					this.SendPropertyChanged("PersonalDetailID");
					this.OnPersonalDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					if (this._Applicant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantNo", DbType="Int")]
		public System.Nullable<int> ApplicantNo
		{
			get
			{
				return this._ApplicantNo;
			}
			set
			{
				if ((this._ApplicantNo != value))
				{
					this.OnApplicantNoChanging(value);
					this.SendPropertyChanging();
					this._ApplicantNo = value;
					this.SendPropertyChanged("ApplicantNo");
					this.OnApplicantNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(MAX)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(MAX)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCountry", DbType="NVarChar(MAX)")]
		public string BirthCountry
		{
			get
			{
				return this._BirthCountry;
			}
			set
			{
				if ((this._BirthCountry != value))
				{
					this.OnBirthCountryChanging(value);
					this.SendPropertyChanging();
					this._BirthCountry = value;
					this.SendPropertyChanged("BirthCountry");
					this.OnBirthCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(MAX)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBeneficiary", DbType="Bit")]
		public System.Nullable<bool> IsBeneficiary
		{
			get
			{
				return this._IsBeneficiary;
			}
			set
			{
				if ((this._IsBeneficiary != value))
				{
					this.OnIsBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._IsBeneficiary = value;
					this.SendPropertyChanged("IsBeneficiary");
					this.OnIsBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeNo", DbType="NVarChar(50)")]
		public string HomeNo
		{
			get
			{
				return this._HomeNo;
			}
			set
			{
				if ((this._HomeNo != value))
				{
					this.OnHomeNoChanging(value);
					this.SendPropertyChanging();
					this._HomeNo = value;
					this.SendPropertyChanged("HomeNo");
					this.OnHomeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessNo", DbType="NVarChar(50)")]
		public string BusinessNo
		{
			get
			{
				return this._BusinessNo;
			}
			set
			{
				if ((this._BusinessNo != value))
				{
					this.OnBusinessNoChanging(value);
					this.SendPropertyChanging();
					this._BusinessNo = value;
					this.SendPropertyChanged("BusinessNo");
					this.OnBusinessNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCodeH", DbType="NVarChar(10)")]
		public string AreaCodeH
		{
			get
			{
				return this._AreaCodeH;
			}
			set
			{
				if ((this._AreaCodeH != value))
				{
					this.OnAreaCodeHChanging(value);
					this.SendPropertyChanging();
					this._AreaCodeH = value;
					this.SendPropertyChanged("AreaCodeH");
					this.OnAreaCodeHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCodeB", DbType="NVarChar(10)")]
		public string AreaCodeB
		{
			get
			{
				return this._AreaCodeB;
			}
			set
			{
				if ((this._AreaCodeB != value))
				{
					this.OnAreaCodeBChanging(value);
					this.SendPropertyChanging();
					this._AreaCodeB = value;
					this.SendPropertyChanged("AreaCodeB");
					this.OnAreaCodeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAusResident", DbType="Bit")]
		public System.Nullable<bool> IsAusResident
		{
			get
			{
				return this._IsAusResident;
			}
			set
			{
				if ((this._IsAusResident != value))
				{
					this.OnIsAusResidentChanging(value);
					this.SendPropertyChanging();
					this._IsAusResident = value;
					this.SendPropertyChanged("IsAusResident");
					this.OnIsAusResidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFileNoExemptionCode", DbType="NVarChar(MAX)")]
		public string TaxFileNoExemptionCode
		{
			get
			{
				return this._TaxFileNoExemptionCode;
			}
			set
			{
				if ((this._TaxFileNoExemptionCode != value))
				{
					this.OnTaxFileNoExemptionCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxFileNoExemptionCode = value;
					this.SendPropertyChanged("TaxFileNoExemptionCode");
					this.OnTaxFileNoExemptionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExemptionReason", DbType="NVarChar(MAX)")]
		public string ExemptionReason
		{
			get
			{
				return this._ExemptionReason;
			}
			set
			{
				if ((this._ExemptionReason != value))
				{
					this.OnExemptionReasonChanging(value);
					this.SendPropertyChanging();
					this._ExemptionReason = value;
					this.SendPropertyChanged("ExemptionReason");
					this.OnExemptionReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryTax", DbType="NVarChar(MAX)")]
		public string CountryTax
		{
			get
			{
				return this._CountryTax;
			}
			set
			{
				if ((this._CountryTax != value))
				{
					this.OnCountryTaxChanging(value);
					this.SendPropertyChanging();
					this._CountryTax = value;
					this.SendPropertyChanged("CountryTax");
					this.OnCountryTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSCitizen", DbType="Bit")]
		public System.Nullable<bool> IsUSCitizen
		{
			get
			{
				return this._IsUSCitizen;
			}
			set
			{
				if ((this._IsUSCitizen != value))
				{
					this.OnIsUSCitizenChanging(value);
					this.SendPropertyChanging();
					this._IsUSCitizen = value;
					this.SendPropertyChanged("IsUSCitizen");
					this.OnIsUSCitizenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFATCA", DbType="Bit")]
		public System.Nullable<bool> IsFATCA
		{
			get
			{
				return this._IsFATCA;
			}
			set
			{
				if ((this._IsFATCA != value))
				{
					this.OnIsFATCAChanging(value);
					this.SendPropertyChanging();
					this._IsFATCA = value;
					this.SendPropertyChanged("IsFATCA");
					this.OnIsFATCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTrust", DbType="NVarChar(MAX)")]
		public string NameTrust
		{
			get
			{
				return this._NameTrust;
			}
			set
			{
				if ((this._NameTrust != value))
				{
					this.OnNameTrustChanging(value);
					this.SendPropertyChanging();
					this._NameTrust = value;
					this.SendPropertyChanged("NameTrust");
					this.OnNameTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABN", DbType="NVarChar(MAX)")]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this.OnABNChanging(value);
					this.SendPropertyChanging();
					this._ABN = value;
					this.SendPropertyChanged("ABN");
					this.OnABNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AusTFN", DbType="NVarChar(MAX)")]
		public string AusTFN
		{
			get
			{
				return this._AusTFN;
			}
			set
			{
				if ((this._AusTFN != value))
				{
					this.OnAusTFNChanging(value);
					this.SendPropertyChanging();
					this._AusTFN = value;
					this.SendPropertyChanged("AusTFN");
					this.OnAusTFNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadEmail", DbType="NVarChar(MAX)")]
		public string LeadEmail
		{
			get
			{
				return this._LeadEmail;
			}
			set
			{
				if ((this._LeadEmail != value))
				{
					this.OnLeadEmailChanging(value);
					this.SendPropertyChanging();
					this._LeadEmail = value;
					this.SendPropertyChanged("LeadEmail");
					this.OnLeadEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointInvestors", DbType="NVarChar(MAX)")]
		public string JointInvestors
		{
			get
			{
				return this._JointInvestors;
			}
			set
			{
				if ((this._JointInvestors != value))
				{
					this.OnJointInvestorsChanging(value);
					this.SendPropertyChanging();
					this._JointInvestors = value;
					this.SendPropertyChanged("JointInvestors");
					this.OnJointInvestorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalDetail_Address", Storage="_Addresses", ThisKey="PersonalDetailID", OtherKey="PersonalDetailID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applicant_PersonalDetail", Storage="_Applicant", ThisKey="ApplicantID", OtherKey="ApplicantID", IsForeignKey=true)]
		public Applicant Applicant
		{
			get
			{
				return this._Applicant.Entity;
			}
			set
			{
				Applicant previousValue = this._Applicant.Entity;
				if (((previousValue != value) 
							|| (this._Applicant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applicant.Entity = null;
						previousValue.PersonalDetails.Remove(this);
					}
					this._Applicant.Entity = value;
					if ((value != null))
					{
						value.PersonalDetails.Add(this);
						this._ApplicantID = value.ApplicantID;
					}
					else
					{
						this._ApplicantID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Applicant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.PersonalDetail = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.PersonalDetail = null;
		}
	}
}
#pragma warning restore 1591
