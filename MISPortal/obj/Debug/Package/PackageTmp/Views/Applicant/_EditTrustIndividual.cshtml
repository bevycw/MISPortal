@model List<MISPortal.Models.ApplicantPersonalDetails>

@Html.HiddenFor(m=>m[0].PD[0]._PersonalDetailID)
@Html.HiddenFor(m=>m[0].PD[0]._RAddressID)
@Html.HiddenFor(m=>m[0].PD[0]._PAddressID)
@if(Model[0].PD.Count()>=2)
{
@Html.HiddenFor(m=>m[0].PD[1]._PersonalDetailID)
@Html.HiddenFor(m=>m[0].PD[1]._RAddressID)
@Html.HiddenFor(m=>m[0].PD[1]._PAddressID)
}
@if(Model[0].PD.Count()>=3)
{
@Html.HiddenFor(m=>m[0].PD[2]._PersonalDetailID)
@Html.HiddenFor(m=>m[0].PD[2]._RAddressID)
@Html.HiddenFor(m=>m[0].PD[2]._PAddressID)
}
@if(Model[0].PD.Count()==4)
{
@Html.HiddenFor(m=>m[0].PD[3]._PersonalDetailID)
@Html.HiddenFor(m=>m[0].PD[3]._RAddressID)
@Html.HiddenFor(m=>m[0].PD[3]._PAddressID)
}


@{
    List<SelectListItem> titleList = new List<SelectListItem>();
    titleList.Add(new SelectListItem { Text = "Miss", Value = "Miss" });
    titleList.Add(new SelectListItem {Text="Mr",Value="Mr"});
    titleList.Add(new SelectListItem {Text="Mrs",Value="Mrs"});
    titleList.Add(new SelectListItem {Text="Ms",Value="Ms"});
    titleList.Add(new SelectListItem {Text="Mx",Value="Mx"});
    titleList.Add(new SelectListItem {Text="Dr",Value="Dr"});
    titleList.Add(new SelectListItem { Text = "Prof", Value = "Prof" });  
    
 }

 @{
    List<SelectListItem> stateList = new List<SelectListItem>();
    stateList.Add(new SelectListItem { Text = "ACT", Value = "ACT" });
    stateList.Add(new SelectListItem { Text = "NSW", Value = "NSW" });
    stateList.Add(new SelectListItem { Text = "NT", Value = "NT" });
    stateList.Add(new SelectListItem { Text = "QLD", Value = "QLD" });
    stateList.Add(new SelectListItem { Text = "SA", Value = "SA" });
    stateList.Add(new SelectListItem { Text = "TAS", Value = "TAS" });
    stateList.Add(new SelectListItem { Text = "VIC", Value = "VIC" });
    stateList.Add(new SelectListItem { Text = "WA", Value = "WA" });  
 }

<table class="table table-responsive table-condensed table-hover no-margin tab-col" >
<tr>
<td>Account Type</td>
<td>@Html.DisplayFor(m=>m[0]._AccountType)</td>
</tr>
<tr>
<td colspan="2" align="center"><h3>Applicant # 1</h3></td>
</tr>
<tr>
<td style="width:50%;">Title</td>
<td style="width:50%;">@Html.DropDownListFor(m => m[0].PD[0]._Title, new SelectList(titleList, "Value", "Text", Model[0].PD[0]._Title), "Title", new { @required = "required" })</td>
</tr>
<tr>
<td>Full Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._FullName, new { @required = "required" })</td>
</tr>
<tr>
<td>Middle Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._MiddleName, new {  })</td>
</tr>
<tr>
<td>Surname</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._Surname, new { @required = "required" })</td>
</tr>
<tr>
<td>Birth Date</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._BirthDate, new { id = "dobejapp1", @onfocusout = "validateDOB(this.value,this.id)", @required = "required" })</td>
</tr>
<tr>
<td>Country of Birth</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._CountryOfBirth, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Occupation</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._Occupation, new { @required = "required" })</td>
</tr>
<tr>
<td>Are you a beneficiary? </td>
<td>@Html.RadioButtonFor(m => m[0].PD[0]._IsBeneficiary, true, new { })
    Yes
    @Html.RadioButtonFor(m => m[0].PD[0]._IsBeneficiary, false, new { })
    No
</td>
</tr>
<tr>
<td>Area Code (Home)</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._AreaCodeH, new { })</td>
</tr>
<tr>
<td>Home Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._HomeNo, new { })</td>
</tr>
<tr>
<td>Area Code (Business)</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._AreaCodeB, new { })</td>
</tr>
<tr>
<td>Business Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._BusinessNo, new { })</td>
</tr>
<tr>
<td>Mobile Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._MobileNo, new { @required = "required" })</td>
</tr>
<tr>
<td>Email Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._EmailAddress, new { @type = "email", @required = "required" })</td>
</tr>
<tr>
<td>Residentail Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Residential Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail State</td>
<td>@Html.DropDownListFor(m => m[0].PD[0]._RState, new SelectList(stateList, "Value", "Text", Model[0].PD[0]._RState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Residential Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Is Same as residentail</td>
<td>
    @Html.HiddenFor(m => m[0].PD[0]._IsSame)
    @Html.DisplayFor(m => m[0].PD[0]._IsSame)</td>
</tr>
@if (Model[0].PD[0]._IsSame == false)
{
<tr>
<td>Postal Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Postal Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Postal State</td>
<td>@Html.DropDownListFor(m => m[0].PD[0]._PState, new SelectList(stateList, "Value", "Text", Model[0].PD[0]._PState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Postal Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Postal Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
}   

@if (Model[0].PD.Count() >= 2)
{    
<tr>
<td colspan="2" align="center"><h3>Applicant # 2</h3></td>
</tr>              
    
<tr>
<td style="width:50%;">Title</td>
<td style="width:50%;">@Html.DropDownListFor(m => m[0].PD[1]._Title, new SelectList(titleList, "Value", "Text", Model[0].PD[1]._Title), "Title", new { @required = "required" })</td>
</tr>
<tr>
<td>Full Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._FullName, new { @required = "required" })</td>
</tr>
<tr>
<td>Middle Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._MiddleName, new { })</td>
</tr>
<tr>
<td>Surname</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._Surname, new { @required = "required" })</td>
</tr>
<tr>
<td>Birth Date</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._BirthDate, new { id = "dobejapp2", @onfocusout = "validateDOB(this.value,this.id)", @required = "required" })</td>
</tr>
<tr>
<td>Country of Birth</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._CountryOfBirth, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Occupation</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._Occupation, new { @required = "required" })</td>
</tr>
<tr>
<td>Are you a beneficiary? </td>
<td>@Html.RadioButtonFor(m => m[0].PD[1]._IsBeneficiary, true, new { })
    Yes
    @Html.RadioButtonFor(m => m[0].PD[1]._IsBeneficiary, false, new { })
    No
</td>
</tr>
<tr>
<td>Area Code (Home)</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._AreaCodeH, new { })</td>
</tr>
<tr>
<td>Home Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._HomeNo, new { })</td>
</tr>
<tr>
<td>Area Code (Business)</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._AreaCodeB, new { })</td>
</tr>
<tr>
<td>Business Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._BusinessNo, new { })</td>
</tr>
<tr>
<td>Mobile Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._MobileNo, new { @required = "required" })</td>
</tr>
<tr>
<td>Email Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._EmailAddress, new { @type = "email", @required = "required" })</td>
</tr>
<tr>
<td>Residentail Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._RUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[1]._RStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[1]._RStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[1]._RStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Residential Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._RSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail State</td>
<td>@Html.DropDownListFor(m => m[0].PD[1]._RState, new SelectList(stateList, "Value", "Text", Model[0].PD[1]._RState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._RPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Residential Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._RCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Is Same as residentail</td>
<td>
    @Html.HiddenFor(m => m[0].PD[1]._IsSame)
    @Html.DisplayFor(m => m[0].PD[1]._IsSame)</td>
</tr>
    if (Model[0].PD[1]._IsSame == false)
    {
<tr>
<td>Postal Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._PUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[1]._PStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[1]._PStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[1]._PStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Postal Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._PSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Postal State</td>
<td>@Html.DropDownListFor(m => m[0].PD[1]._PState, new SelectList(stateList, "Value", "Text", Model[0].PD[1]._PState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Postal Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._PPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Postal Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[1]._PCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
    }
}


@if (Model[0].PD.Count() >= 3)
{
<tr>
<td colspan="2" align="center"><h3>Applicant # 3</h3></td>
</tr>
        
    <tr>
<td style="width:50%;">Title</td>
<td style="width:50%;">@Html.DropDownListFor(m => m[0].PD[2]._Title, new SelectList(titleList, "Value", "Text", Model[0].PD[2]._Title), "Title", new { @required = "required" })</td>
</tr>
<tr>
<td>Full Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._FullName, new { @required = "required" })</td>
</tr>
<tr>
<td>Middle Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._MiddleName, new { })</td>
</tr>
<tr>
<td>Surname</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._Surname, new { @required = "required" })</td>
</tr>
<tr>
<td>Birth Date</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._BirthDate, new { id = "dobejapp3", @onfocusout = "validateDOB(this.value,this.id)", @required = "required" })</td>
</tr>
<tr>
<td>Country of Birth</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._CountryOfBirth, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Occupation</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._Occupation, new { @required = "required" })</td>
</tr>
<tr>
<td>Are you a beneficiary? </td>
<td>@Html.RadioButtonFor(m => m[0].PD[2]._IsBeneficiary, true, new { })
    Yes
    @Html.RadioButtonFor(m => m[0].PD[2]._IsBeneficiary, false, new { })
    No
</td>
</tr>
<tr>
<td>Area Code (Home)</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._AreaCodeH, new { })</td>
</tr>
<tr>
<td>Home Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._HomeNo, new { })</td>
</tr>
<tr>
<td>Area Code (Business)</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._AreaCodeB, new { })</td>
</tr>
<tr>
<td>Business Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._BusinessNo, new { })</td>
</tr>
<tr>
<td>Mobile Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._MobileNo, new { @required = "required" })</td>
</tr>
<tr>
<td>Email Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._EmailAddress, new { @type = "email", @required = "required" })</td>
</tr>
<tr>
<td>Residentail Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._RUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[2]._RStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[2]._RStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[2]._RStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Residential Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._RSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail State</td>
<td>@Html.DropDownListFor(m => m[0].PD[2]._RState, new SelectList(stateList, "Value", "Text", Model[0].PD[2]._RState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._RPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Residential Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[2]._RCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Is Same as residentail</td>
<td>
    @Html.HiddenFor(m => m[0].PD[2]._IsSame)
    @Html.DisplayFor(m => m[0].PD[2]._IsSame)</td>
</tr>
    if (Model[0].PD[2]._IsSame == false)
    {
    <tr>
    <td>Postal Address</td>
    <td>@Html.TextBoxFor(m => m[0].PD[2]._PUnit, new { placeholder = "Unit" })
        @Html.TextBoxFor(m => m[0].PD[2]._PStreetNo, new { placeholder = "Street No", @required = "required" })
        @Html.TextBoxFor(m => m[0].PD[2]._PStreetName, new { placeholder = "Street Name", @required = "required" })
        @Html.TextBoxFor(m => m[0].PD[2]._PStreetType, new { placeholder = "Street Type" })</td>
    </tr>
    <tr>
    <td>Postal Suburb</td>
    <td>@Html.TextBoxFor(m => m[0].PD[2]._PSuburb, new { @required = "required" })</td>
    </tr>
    <tr>
    <td>Postal State</td>
    <td>@Html.DropDownListFor(m => m[0].PD[2]._PState, new SelectList(stateList, "Value", "Text", Model[0].PD[2]._PState), "State", new { @required = "required" })</td>
    </tr>
    <tr>
    <td>Postal Postcode</td>
    <td>@Html.TextBoxFor(m => m[0].PD[2]._PPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
    </tr>
    <tr>
    <td>Postal Country</td>
    <td>@Html.TextBoxFor(m => m[0].PD[2]._PCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
    </tr>
    }

}


@if (Model[0].PD.Count() == 4)
{
<tr>
<td colspan="2" align="center"><h3>Applicant # 4</h3></td>
</tr>
        
    <tr>
<td style="width:50%;">Title</td>
<td style="width:50%;">@Html.DropDownListFor(m => m[0].PD[3]._Title, new SelectList(titleList, "Value", "Text", Model[0].PD[3]._Title), "Title", new { @required = "required" })</td>
</tr>
<tr>
<td>Full Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._FullName, new { @required = "required" })</td>
</tr>
<tr>
<td>Middle Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._MiddleName, new { })</td>
</tr>
<tr>
<td>Surname</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._Surname, new { @required = "required" })</td>
</tr>
<tr>
<td>Birth Date</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._BirthDate, new { id = "dobejapp4", @onfocusout = "validateDOB(this.value,this.id)", @required = "required" })</td>
</tr>
<tr>
<td>Country of Birth</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._CountryOfBirth, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Occupation</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._Occupation, new { @required = "required" })</td>
</tr>
<tr>
<td>Are you a beneficiary? </td>
<td>@Html.RadioButtonFor(m => m[0].PD[3]._IsBeneficiary, true, new { })
    Yes
    @Html.RadioButtonFor(m => m[0].PD[3]._IsBeneficiary, false, new { })
    No
</td>
</tr>
<tr>
<td>Area Code (Home)</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._AreaCodeH, new { })</td>
</tr>
<tr>
<td>Home Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._HomeNo, new { })</td>
</tr>
<tr>
<td>Area Code (Business)</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._AreaCodeB, new { })</td>
</tr>
<tr>
<td>Business Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._BusinessNo, new { })</td>
</tr>
<tr>
<td>Mobile Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._MobileNo, new { @required = "required" })</td>
</tr>
<tr>
<td>Email Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._EmailAddress, new { @type = "email", @required = "required" })</td>
</tr>
<tr>
<td>Residentail Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._RUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[3]._RStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[3]._RStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[3]._RStreetType, new { placeholder = "Street Type" })</td>
</tr>
<tr>
<td>Residential Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._RSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail State</td>
<td>@Html.DropDownListFor(m => m[0].PD[3]._RState, new SelectList(stateList, "Value", "Text", Model[0].PD[3]._RState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._RPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Residential Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[3]._RCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Is Same as residentail</td>
<td>
    @Html.HiddenFor(m => m[0].PD[3]._IsSame)
    @Html.DisplayFor(m => m[0].PD[3]._IsSame)</td>
</tr>
    if (Model[0].PD[3]._IsSame == false)
    {
    <tr>
    <td>Postal Address</td>
    <td>@Html.TextBoxFor(m => m[0].PD[3]._PUnit, new { placeholder = "Unit" })
        @Html.TextBoxFor(m => m[0].PD[3]._PStreetNo, new { placeholder = "Street No", @required = "required" })
        @Html.TextBoxFor(m => m[0].PD[3]._PStreetName, new { placeholder = "Street Name", @required = "required" })
        @Html.TextBoxFor(m => m[0].PD[3]._PStreetType, new { placeholder = "Street Type" })</td>
    </tr>
    <tr>
    <td>Postal Suburb</td>
    <td>@Html.TextBoxFor(m => m[0].PD[3]._PSuburb, new { @required = "required" })</td>
    </tr>
    <tr>
    <td>Postal State</td>
    <td>@Html.DropDownListFor(m => m[0].PD[3]._PState, new SelectList(stateList, "Value", "Text", Model[0].PD[3]._PState), "State", new { @required = "required" })</td>
    </tr>
    <tr>
    <td>Postal Postcode</td>
    <td>@Html.TextBoxFor(m => m[0].PD[3]._PPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
    </tr>
    <tr>
    <td>Postal Country</td>
    <td>@Html.TextBoxFor(m => m[0].PD[3]._PCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
    </tr>
    }
        
}
</table>         