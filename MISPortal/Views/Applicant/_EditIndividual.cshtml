@model List<MISPortal.Models.ApplicantPersonalDetails>

                    
@Html.HiddenFor(m=>m[0].PD[0]._PersonalDetailID)
@Html.HiddenFor(m=>m[0].PD[0]._RAddressID)
@Html.HiddenFor(m=>m[0].PD[0]._PAddressID)

@{
    List<SelectListItem> titleList = new List<SelectListItem>();
    titleList.Add(new SelectListItem { Text = "Miss", Value = "Miss" });
    titleList.Add(new SelectListItem {Text="Mr",Value="Mr"});
    titleList.Add(new SelectListItem {Text="Mrs",Value="Mrs"});
    titleList.Add(new SelectListItem {Text="Ms",Value="Ms"});
    titleList.Add(new SelectListItem {Text="Mx",Value="Mx"});
    titleList.Add(new SelectListItem {Text="Dr",Value="Dr"});
    titleList.Add(new SelectListItem { Text = "Prof", Value = "Prof" });  
    
 }

 @{
    List<SelectListItem> stateList = new List<SelectListItem>();
    stateList.Add(new SelectListItem { Text = "ACT", Value = "ACT" });
    stateList.Add(new SelectListItem { Text = "NSW", Value = "NSW" });
    stateList.Add(new SelectListItem { Text = "NT", Value = "NT" });
    stateList.Add(new SelectListItem { Text = "QLD", Value = "QLD" });
    stateList.Add(new SelectListItem { Text = "SA", Value = "SA" });
    stateList.Add(new SelectListItem { Text = "TAS", Value = "TAS" });
    stateList.Add(new SelectListItem { Text = "VIC", Value = "VIC" });
    stateList.Add(new SelectListItem { Text = "WA", Value = "WA" });  
 }

<table class="table table-responsive table-condensed table-hover no-margin tab-col" >
<tr>
<td>Account Type</td>
<td>@Html.DisplayFor(m=>m[0]._AccountType)</td>
</tr>

    
<tr>
<td style="width:50%;">Title</td>
<td style="width:50%;">@Html.DropDownListFor(m => m[0].PD[0]._Title, new SelectList(titleList,"Value","Text",Model[0].PD[0]._Title), "Title", new { @required = "required" })</td>
</tr>
<tr>
<td>Full Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._FullName, new { @required = "required" })</td>
</tr>
<tr>
<td>Middle Name</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._MiddleName, new {  })</td>
</tr>
<tr>
<td>Surname</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._Surname, new { @required = "required" })</td>
</tr>
<tr>
<td>Birth Date</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._BirthDate, new { id = "dobei", @onfocusout = "validateDOB(this.value,this.id)", @required = "required" })</td>
</tr>
<tr>
<td>Country of Birth</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._CountryOfBirth, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Occupation</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._Occupation, new { @required = "required" })</td>
</tr>
<tr>
<td>Area Code (Home)</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._AreaCodeH, new {  })</td>
</tr>
<tr>
<td>Home Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._HomeNo, new {  })</td>
</tr>
<tr>
<td>Area Code (Business)</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._AreaCodeB, new { })</td>
</tr>
<tr>
<td>Business Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._BusinessNo, new { })</td>
</tr>
<tr>
<td>Mobile Number</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._MobileNo, new { @required = "required" })</td>
</tr>
<tr>
<td>Email Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._EmailAddress, new { @type = "email", @required = "required" })</td>
</tr>
<tr>
<td>Tax File Number/Exemption Code</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._TaxFileNoExemptionCode, new { id = "_TaxFileNoExemptionCode" })</td>
</tr>
<tr>
<td>Exemption Reason</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._ExemptionReason, new { id = "_ExemptionReason" })</td>
</tr>
<tr>
<td>Country Tax</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._CountryTax, new { id = "_CountryTax", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Residentail Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._RStreetType, new { placeholder = "Street Type" })
</td>
</tr>
<tr>
<td>Residential Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail State</td>
<td>@Html.DropDownListFor(m => m[0].PD[0]._RState, new SelectList(stateList, "Value", "Text", Model[0].PD[0]._RState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Residentail Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Residential Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._RCountry, new { @required = "required", @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
<tr>
<td>Is Same as residentail</td>
<td>
@Html.HiddenFor(m => m[0].PD[0]._IsSame)
@Html.DisplayFor(m => m[0].PD[0]._IsSame)</td>
</tr>
@if (Model[0].PD[0]._IsSame == false)
{
<tr>
<td>Postal Address</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PUnit, new { placeholder = "Unit" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetNo, new { placeholder = "Street No", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetName, new { placeholder = "Street Name", @required = "required" })
    @Html.TextBoxFor(m => m[0].PD[0]._PStreetType, new { placeholder = "Street Type" })
</td>
</tr>
<tr>
<td>Postal Suburb</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PSuburb, new { @required = "required" })</td>
</tr>
<tr>
<td>Postal State</td>
<td>@Html.DropDownListFor(m => m[0].PD[0]._PState, new SelectList(stateList, "Value", "Text", Model[0].PD[0]._PState), "State", new { @required = "required" })</td>
</tr>
<tr>
<td>Postal Postcode</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PPostcode, new { @required = "required", maxlength = "4", minlength = "4" })</td>
</tr>
<tr>
<td>Postal Country</td>
<td>@Html.TextBoxFor(m => m[0].PD[0]._PCountry, new { @class = "country", @data_autocomplete = Url.Action("GETCountryNames", "Applicant") })</td>
</tr>
}
<tr>
<td>Is Us Citizen</td>
<td>
@Html.RadioButtonFor(m => m[0].PD[0]._IsUSCitizen, true, new { onclick = "ShowHideElement('trFATCA',true)" })
Yes
@Html.RadioButtonFor(m => m[0].PD[0]._IsUSCitizen, false, new { onclick = "ShowHideElement('trFATCA',false)" })
No
</td>
</tr>
<tr id="trFATCA">
<td>Is FATCA Exempt</td>
<td>
@Html.RadioButtonFor(m => m[0].PD[0]._IsFATCA, true)
Yes
@Html.RadioButtonFor(m => m[0].PD[0]._IsFATCA, false, new { })
No
</td>
</tr>


@if (Model[0]._AccountType == "TrustIndividual")
{
    <tr>
    <td>Trust name or superannutation fund</td>
    <td>@Html.TextBoxFor(m => m[0].PD[0]._NameTrust, new { @required = "required" })</td>
    </tr>
    <tr>
    <td>ABN</td>
    <td>@Html.TextBoxFor(m => m[0].PD[0]._ABN, new { @required = "required" })</td>
    </tr>
    <tr>
    <td>Australian tax file number(TFN)</td>
    <td>@Html.TextBoxFor(m => m[0].PD[0]._AusTFN, new { @required = "required" })</td>
    </tr>
}


</table>                    





<script type="text/javascript">
    $(document).ready(function () {
        $("#_TaxFileNoExemptionCode").keypress(function () {
            $("#_CountryTax").val("");
            $("#_ExemptionReason").val("");
        });
        $("#_ExemptionReason").keypress(function () {
            $("#_CountryTax").val("");
            $("#_TaxFileNoExemptionCode").val("");
        });
        $("#_CountryTax").keypress(function () {
            $("#_TaxFileNoExemptionCode").val("");
            $("#_ExemptionReason").val("");
        });

        var IsUSCitizen = $("input[name='[0].PD[0]._IsUSCitizen']:checked").val();
        if (IsUSCitizen == "False") {
            $("#trFATCA").hide();
        }
    });
</script>